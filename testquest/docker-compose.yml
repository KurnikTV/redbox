version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: testpass
      POSTGRES_DB: testdb
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    networks:
      - app-network

  php:
    build: ./php
    volumes:
      - ./php/src:/var/www/html
    environment:
      DB_HOST: postgres
      DB_NAME: testdb
      DB_USER: testuser
      DB_PASSWORD: testpass
      REDIS_HOST: redis
    depends_on:
      - postgres
      - redis
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
      - "8081:8081"
    volumes:
      - ./php/src:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
    networks:
      - app-network

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:0.11.0
    command: ['-nginx.scrape-uri=http://nginx:8081/stub_status']
    ports:
      - "9113:9113"
    depends_on:
      - nginx
    networks:
      - app-network

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
    depends_on:
      - nginx-exporter
    networks:
      - app-network

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      -  grafana_storage:/var/lib/grafana
    networks:
      - app-network

volumes:
  pgdata:
  grafana_storage: {}

networks:
  app-network:
    driver: bridge
